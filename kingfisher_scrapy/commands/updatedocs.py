import os
from itertools import groupby
from textwrap import dedent

from scrapy.commands import ScrapyCommand
from scrapy.utils.misc import walk_modules
from scrapy.utils.spider import iter_spider_classes


class UpdateDocs(ScrapyCommand):
    def short_desc(self):
        return 'Update docs/spiders.rst'

    def run(self, args, opts):
        basedir = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

        def _keyfunc(module):
            module_name = module.__name__.rsplit('.', 1)[-1]
            if module_name.startswith(('costa_rica', 'dominican_republic')):
                return '_'.join(module_name.split('_', 2)[:2])
            return module_name.split('_', 1)[0]

        with open(os.path.join(basedir, 'docs', 'spiders.rst'), 'w') as f:
            f.write(dedent("""\
            Spiders
            =======

            All the spiders support these common arguments:

            sample
              Sets the number of items to download.

            Some spiders have the same domain (jurisdiction). The difference is indicated in the suffix to the spider's name:

            _releases
              Downloads release packages
            _records
              Downloads record packages
            _bulk
              The source is bulk data
            _historical
              The source is historical data

            .. Do not edit this file. Instead, run: `scrapy updatedocs`
            """))

            for key, group in groupby(walk_modules('kingfisher_scrapy.spiders'), _keyfunc):
                if key in ('spiders', 'fail'):
                    continue

                f.write(f"\n{key.replace('_', ' ').title()}\n{'-' * len(key)}\n")

                for module in group:
                    for cls in iter_spider_classes(module):
                        f.write(f'\n.. autoclass:: {module.__name__}.{cls.__name__}\n   :no-members:\n')
